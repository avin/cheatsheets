// ---------------------------------------------------
// üìå –°—Ç—Ä–æ–∫–∞ -> –º–∞—Å—Å–∏–≤ –∏ –æ–±—Ä–∞—Ç–Ω–æ
// ---------------------------------------------------
const arr = str.split('');
const str2 = arr.join('');
const chars = Array.from(str);


// ---------------------------------------------------
// üìå –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
// ---------------------------------------------------
str.includes('abc');     // true / false
str.indexOf('abc');      // –ø–æ–∑–∏—Ü–∏—è –∏–ª–∏ -1


// ---------------------------------------------------
// üìå –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
// ---------------------------------------------------
str1 === str2;
str1.toLowerCase() === str2.toLowerCase();


// ---------------------------------------------------
// üìå –°–ª–∏—è–Ω–∏–µ —Å—Ç—Ä–æ–∫
// ---------------------------------------------------
const merged = str1 + str2;
const merged2 = `${str1}${str2}`;


// ---------------------------------------------------
// üìå –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤
// ---------------------------------------------------
str.replace(/x/g, '');


// ---------------------------------------------------
// üìå –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–æ–≤ / –ø–æ–¥—Å—Ç—Ä–æ–∫
// ---------------------------------------------------
str.replace(/l/g, 'X');       // –≤—Å–µ 'l'
str.replace('ll', 'XX');      // —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ 'll'


// ---------------------------------------------------
// üìå –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
// ---------------------------------------------------
const found = /l/.test(str);
const matches = str.match(/l/g);


// ---------------------------------------------------
// üìå –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ (trim)
// ---------------------------------------------------
const trimmed = str.trim();           // —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω
const leftTrim = str.trimStart();     // —Å–ª–µ–≤–∞
const rightTrim = str.trimEnd();      // —Å–ø—Ä–∞–≤–∞


// ---------------------------------------------------
// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞/—Å—É—Ñ—Ñ–∏–∫—Å–∞
// ---------------------------------------------------
const hasPrefix = str.startsWith('pre');
const hasSuffix = str.endsWith('fix');


// ---------------------------------------------------
// üìå –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é
// ---------------------------------------------------
const parts = str.split(',');         // —Ä–∞–∑–¥–µ–ª–∏—Ç—å –ø–æ –∑–∞–ø—è—Ç–æ–π
const words = str.split(/\s+/);       // —Ä–∞–∑–¥–µ–ª–∏—Ç—å –ø–æ –ø—Ä–æ–±–µ–ª–∞–º


// ---------------------------------------------------
// üìå –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
// ---------------------------------------------------
const repeated = 'Go'.repeat(3);      // 'GoGoGo'


// ---------------------------------------------------
// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –∏ —Å–∏–º–≤–æ–ª–∞ –ø–æ –∫–æ–¥—É
// ---------------------------------------------------
const code = str.charCodeAt(0);       // –∫–æ–¥ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
const char = String.fromCharCode(65); // 'A'


// ---------------------------------------------------
// üìå –ü–æ–¥—Å—Ç—Ä–æ–∫–∞
// ---------------------------------------------------
const sub = str.substring(0, 5);      // [0, 5)
const sub2 = str.slice(2, 5);         // [2, 5)
const sub3 = str.slice(-3);           // –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–∏–º–≤–æ–ª–∞